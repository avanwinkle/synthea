$syn-accent: #368BE6;
$syn-accent-faded: desaturate($syn-accent, 50%);
$syn-background: #eee;
$track-background: #ddd;

*, *:before, *:after {
	box-sizing: border-box;
}

body {
	background-color: $syn-background;
	margin:0;
	padding: 0;
	text-align: center;
	// Let the md-content handle the scrolling
	overflow:hidden;
	// Keep room for the player
	padding-bottom: 30px;

	&.stealth {
		#page-header, #page-tabs { display: none;}

		#page-container, column, track-container {
			// color: #dddddd !important;
			// background-color: $syn-background !important;
		}
	}
}

button:active, button:focus {
	outline: none;
	border: none;
}

#currentTracks {
	background-color: #ddd;
	bottom:0;
	position:absolute;
	right:16px;
	width: 196px;
	z-index: 20;

	.track-container {
		$height: 96px;
		height: $height;
		opacity:1;

		&-title {
			text-align: right;
		}

		&.ng-enter {
			display: block !important;
			height:0;
			opacity:0;
			&-active {
				height: $height;
				opacity: 1;
			}
		}

		&.ng-leave {
			display: block !important;
			opacity:1;
			height: $height;
			&-active {
				height:0;
				opacity:0;
			}
		}

		&.STOPPING {
			cursor: default;
			.track-timeline-progress {
				background-color: #666;
			}
			.track-buttons {
				.track-button-loop, .track-button-play, .track-button-pause {

				}
				.track-button-stop {
					 @extend .blink;
				}
			}
		}

		&.PAUSING, &.PAUSED {
			.track-timeline-progress {
				background-color: $syn-accent-faded;
			}
			.track-button-pause {
				 @extend .blink;
			}
		}
	}
}

#queuedTracks {
	bottom:0;
	left:16px;
	position:absolute;
	width: 196px;
	z-index: 19;

	.track-container {
		$height: 64px;
		height: $height;
		opacity:1;

		&-title {
			text-align: left;
		}

		&.ng-enter {
			display: block !important;
			height:0;
			opacity:0;
			&-active {
				height: $height;
				opacity: 1;
			}
		}

		&.ng-leave {
			display: block !important;
			opacity:1;
			height: $height;
			&-active {
				height:0;
				opacity:0;
			}
		}

		&.expanded {
			height: 112px;
		}
	}
}

#synLoader {
	padding: 24px;
	text-align: left;

	&-content {
		max-width: 400px;
		margin: 0 auto;
	}

	#loader-title {
		font-size: 24px;
		font-weight:400;
	}

	#loader-desc {
		font-weight: 300;
		margin: 8px 0;
		text-align: justify;
	}

	#loader-footer {
		text-align: right;
		.cancelbutton:not(:hover) {
			opacity: 0.5;
		}
	}
}

.track {
	background-color: $track-background;
	border: solid 1px rgba(0,0,0,0.4);
	font-size: 12px;
	// With the big md-icon-button margins, no bottom padding
	padding: 8px 8px 0 8px;
	opacity:1;
	overflow:hidden;
	// Stack these ABOVE the titles, so they overlap
	position: relative;
	z-index:2;
}

.track-button {

	opacity: 1;
	transition: opacity 0.2s ease-in-out;

	&.active {
		stroke: $syn-accent;

		svg {
			background-color: rgba(0,0,0,0.12);
			border-radius: 4px;
			fill: darken($syn-accent, 20%);
		}
	}
}

.track-container {
	position: relative;
	transition: height 0.5s ease-in-out, opacity 0.5s ease-in-out;

	&-title {
		background-color: #696969;
		border-radius: 4px 4px 0 0;
		color: #eee;
		font-size: 10px;
		opacity: 1;
		padding: 4px 8px;

		// Use absolute positioning so the enter/leave doesn't jigger the animation
		position:absolute;
		left: 0; right: 0; bottom: 100%;
		transition: opacity 0.5s ease-in-out;

		&.ng-enter {
			display: block !important;
			opacity: 0;
			&-active {
				opacity: 1;
			}
		}
		&.ng-leave {
			display: block !important;
			&-active {
				opacity: 0;
			}
		}
	}
}

.track-eta {
	font-size: 16px;
	font-weight:500;
	line-height:1;

	&-preview {
		color: $syn-accent;
	}
}

.track-timecode {

	font-size: 12px;
	margin-top: -16px;
	padding: 0 8px;

	&:first-child { text-align: left;}
	&:last-child { text-align: right;}
}

.track-timeline {
	height: 32px;
	padding-top: 8px;

	&-bar {
		background-color: #bbb;
		height: 8px;
		position: relative;
		width: 100%;
	}
	&-progress {
		background-color: $syn-accent;
		position:absolute;
		top:0; left:0; bottom:0;
		width: 100%;
		z-index: 1;

		// Use transform rather than width, so it's smoother
		transform: scaleX(0);
		transform-origin: left;
		transition: transform 0.1s linear, background-color 0.2s ease-in-out;
	}

	// The seeker lives on top for consistent offsets
	&-seeker {
		cursor: pointer;
		position: absolute;
		top:0; left: 0; right:0; bottom:0;
		z-index: 2;

		&:focus {
			outline: none;
		}
	}
}

.track-title {
	overflow:hidden;
	text-align: left;
	text-overflow:ellipsis;
	white-space: nowrap;
}

#page-bannersection {
	background-color: rgb(100,100,100);
	background-position: center center;
	background-size: cover;

	&.hasBanner {


		#page-header {
			height: 128px;
		}

		#page-tabs {
			background-color: rgba(100,100,100,0.7);
		}

		#title {
			text-align: right;
					text-shadow: 1px 1px 2px rgba(0,0,0,0.1), 2px 2px 2px rgba(0,0,0,0.15);


			&-text {
				line-height: 48px;
			}
		}

		#logo-offset {
			display: none;
		}

	}
}

#page-header {
	background-color: transparent;
	position:relative;
	font-family: sans-serif;

	#title {
		display: inline-block;
		padding: 8px;
		color: rgba(255,255,255,0.8);

		&-text {
			line-height: 60px;
			vertical-align: middle;
			font-weight: bold;
			font-size: 105%;
			padding-left: 10px;
		}
	}

	#logo {
		background-image: url('synthea_icon.png');
		background-position: 8px 8px;
		background-repeat: no-repeat;
		background-size: 48px;
	}

	#logo, #logo-offset {
		width: 64px;
	}

}




#page-tabs {
	color: #eee;
	border-bottom: solid 1px #ddd;

	.page-tab-container {

	}

	.page-tab {
		padding: 8px 16px;
		outline: none;

		&:focus {
			background-color: #999;
		}

		&.current {
			background-color: $syn-accent;
			color: #fff;
		}

		&:not(.current):hover {
			background-color: #999;
			cursor: pointer;
		}
	}
}

#page-container {
	background-color: #eee;
	clear: both;
	padding-bottom: 15px;

	&-content {
		justify-content: center;
	}

	.column {
		display: inline-block;
		vertical-align:top;
		margin-top: 1em;
		// Have some reasonableness to the button column widths
		max-width: 300px;
		min-width:200px;
		position: relative;

		&-header {
			background-color: #eee;
			position: relative;
			z-index: 2;
			display: inline-block;
			padding: 0 0.5em;
		}

		&-container {
			margin: -12px 8px 1em 8px;
			padding: 16px 8px;
			border: solid 1px #ccc;
			border-radius: 8px;
		}
	}

}

.cueButton.md-button {

	background-color: #fafafa;
	border: solid 1px #bbb;
	border-radius: 6px;
	font-size: 12px;
	font-weight: 400;
	margin:0;
	text-transform: none;
	width: 100%;

	// transition-property: border-color, color;
	// transition-timing-function: ease-in-out;

	// // States!
	// &.channelState-STOPPING {
	// 	transition-duration: 2s;
	// 	border-color: #bbb;
	// 	color: #666;
	// }
	// &.channelState-STOPPED {
	// 	transition-duration: 0.5s;
	// }
	// &.channelState-PAUSING, &.channelState-PAUSED {
	// 	transition-duration: 2s;
	// 	color: $syn-accent-faded;
	// 	border-color: $syn-accent-faded;
	// 	// color: #eee;
	// }
	// &.channelState-PLAYING {
	// 	transition-duration: 1s;
	// 	color: $syn-accent;
	// 	border-color: $syn-accent;
	// 	// color: #fff;
	// }
}

// An icon badge to indicate the status of a cue
.cueButton-badge {

	position: absolute;
	top: 4px;
	left: -4px;
	// right:16px;

	// Individual badge svgs
		background-color: $syn-accent-faded;
		border-radius: 8px;
		border: solid 1px rgba(0,0,0,0.1);
		height: 18px;
		width: 18px;
		transition-property: background-color, opacity;
		transition-duration: 0.5s;
		transition-timing-function: ease-in-out;

	&.channelState- {
		opacity: 0;
	}

	&.channelState-PLAYING {
		background-color: $syn-accent;
	}

	&.channelState-STOPPING, &.channelState-STOPPED {
		background-color: #bbb;
	}

	&.channelState-QUEUING, &.channelState-QUEUED {
		// Offset the icon a bit, since it's weighted offcenter
		padding: 1px 0 0 2px;
	}

	.badge {
		// opacity:0;
		position:absolute;
		visibility: hidden;

		// AWkward positioning
		margin-left: 1px;
		margin-top: -2px;

		&.badge-queue {
			margin-left: 0;
		}

		.syn-icon {
			fill: #fff;
		}


	}

	// Show/hide the various icons
	&.channelState-PAUSED .badge-pause,
	&.channelState-PAUSING .badge-pause,
	&.channelState-PLAYING .badge-play,
	&.channelState-QUEUED .badge-queue,
	&.channelState-QUEUING .badge-queue,
	&.channelState-STOPPING .badge-stop,
	&.channelState-STOPPED .badge-stop
	 {
		// opacity: 1;
		visibility: visible;
	}

	&.channelState-PAUSING .badge-pause .syn-icon,
	&.channelState-STOPPING .badge-stop .syn-icon,
	&.channelState-QUEUING .badge-queue .syn-icon {
		@extend .blink;
	}
}

.cueButton-container {
	padding: 8px 0;
	position: relative;
}

md-slider.track-timebar {
	.md-track-fill, .md-thumb, .md-thumb-container, .md-focus-ring {
		transition-timing-function: linear;
		transition-duration: 0.01s;
	}
}


.blink {
  animation: blink-animation 0.5s steps(8, start) infinite alternate;
}
@keyframes blink-animation {
  from {
  	opacity: 1;
  }
  to {
    opacity: 0;
  }
}