@import 'syn-common.scss';


// A container that holds a channel players
.track-container-player {
    display: block;
    position: relative;
    opacity: 1;
    transition: height $track-trans-time ease-in-out, opacity $track-trans-time ease-in-out;

    &.expanded {
        background-color: red !important;
    }

     &.ng-enter {
        display: block !important;
        height:0;
        opacity:0;
        overflow:hidden;

        &-active {
            opacity: 1;

            &:not(.queue) {
                height: $track-container-height;
            }
            &.queue {
               height: $queue-container-height;
            }
        }
    }

    &.ng-leave {
        display: block !important;
        overflow:hidden;

        &:not(.queue) {
            height: $track-container-height;
        }
        &.queue {
           height: $queue-container-height;
        }
        &.expanded {
            height: $expanded-container-height;
        }

        &-active {
            opacity: 0;
            height:0 !important;
        }
    }

}

.cplayer {
    background-color: $track-background;
    border: solid 1px rgba(0,0,0,0.4);
    font-size: 12px;
    // With the big md-icon-button margins, no bottom padding
    padding: 8px 8px 0 8px;
    opacity:1;
    overflow: hidden;
    // Stack these ABOVE the titles, so they overlap
    position: relative;
    z-index:2;

    transition: height $track-trans-time ease-in-out;

    &:not(.cplayer-mode-queue) {
        height: $track-container-height;
    }
    &.cplayer-mode-queue {
        height: $queue-container-height
    }

    &.cplayer-mode-queue.expanded:not(.STOPPING):not(.STOPPED) {
        height: $expanded-container-height;

        .cplayer-button-expand {
            transform: rotate(180deg);
        }

    }

    &.STOPPED {
        // Typically when stopped the player will disappear, but in editor preview
        // it will persist. Since the file source is unloaded, don't show a play
        // or anything else
        .cplayer-button-play, .cplayer-button-pause {
            display: none;
        }
    }

    &.STOPPING {
        cursor: default;
        .cplayer-timeline-progress {
            background-color: #666;
        }
        .cplayer-buttons {
            .cplayer-button-loop, .cplayer-button-play, .cplayer-button-pause {

            }
            .cplayer-button-stop {
                 @extend .blink;
            }
        }
    }

    &.PAUSING, &.PAUSED {
        .cplayer-timeline-progress {
            background-color: $syn-accent-faded;
        }
        .cplayer-button-pause {
             @extend .blink;
        }
    }

    .cplayer-button-queuing { display: none; }

    &.QUEUING {
        .cplayer-button-play, .cplayer-button-pause
        {
            display: none;
        }
        .cplayer-button-queuing {
            display: inline;
        }
    }
}

.cplayer-button {

    opacity: 1;
    position: relative;
    transition: opacity $track-trans-time ease-in-out, transform $track-trans-time ease-in-out;

    &.active {
        stroke: $syn-accent-400;

        svg {
            background-color: rgba(0,0,0,0.12);
            border-radius: 4px;
            fill: darken($syn-accent, 20%);
        }
    }

    &-subtitle {
        // Cutting off the volume icon looks better than trying to fit both
        background-color: $track-background;
        bottom: 2px;
        color: #666;
        font-size: 10px;
        left:0;
        line-height: 1.2;
        right:0;
        position:absolute;
        text-align: center;
    }
}

.cplayer-buttons-container {
    position: relative;
    // Align them for visual balance
    text-align: center;
    &:first-child {
        text-align: left;
         .md-button.md-icon-button {
            // margin-left: -6px;
            margin-left:0;
        }
    }
    &:last-child {
        text-align: right;
        .md-button.md-icon-button {
            // margin-right: -6px;
            margin-right:0;
        }
    }
}

.cplayer-eta {
    font-size: 16px;
    font-weight:500;
    line-height:1;

    &-preview {
        color: $syn-accent;
    }
}

.cplayer-subgroup {
    font-size: 10px;
    color: #666;
    padding-top: 8px;
    text-align: center;
    text-transform: capitalize;

}

.cplayer-timecode {

    font-size: 12px;
    margin-top: -16px;
    padding: 0 8px;

    &:first-child {
        text-align: left;
    }
    &:last-child {
        text-align: right;
    }
}

.cplayer-timeline {
    height: 32px;
    padding-top: 8px;

    &-bar {
        background-color: #bbb;
        height: 8px;
        position: relative;
        width: 100%;
    }
    &-progress {
        background-color: $syn-accent;
        position:absolute;
        top:0; left:0; bottom:0;
        width: 100%;
        z-index: 1;

        // Use transform rather than width, so it's smoother
        transform: scaleX(0);
        transform-origin: left;
        transition: transform 0.1s linear, background-color 0.2s ease-in-out;
    }

    // The seeker lives on top for consistent offsets
    &-seeker {
        cursor: pointer;
        position: absolute;
        top:0; left: 0; right:0; bottom:0;
        z-index: 2;

        &:focus {
            outline: none;
        }
    }
}

// Instant when paused
.cplayer.QUEUED .cplayer-timeline-progress, .cplayer.PAUSED .cplayer-timeline-progress {
    transition-duration: 0s;
}

.cplayer-title {
    overflow:hidden;
    text-align: left;
    text-overflow:ellipsis;
    white-space: nowrap;
}

.cplayer-volume {

    &-duration {
        align-items: center;
        border-top: solid 1px #ddd;
        justify-content: center;
        max-width: 66.5px;
        margin: 0 auto;
        padding-top: 8px;
        width: 100%;

        &-amount {
            min-width: 30px;
            font-size: 14px;
            text-align: center;
        }

        &-button {
            margin-left: 0;
            margin-right: 0;

            &:not(.disabled) {
                color: $syn-accent-600;
                cursor: pointer;
            }
        }
    }
}


/**  SPECIFIC STYLES TO PLAYBACK VIEW **/

.track-container-title {
    background-color: #696969;
    border-radius: 4px 4px 0 0;
    color: #eee;
    font-size: 10px;
    opacity: 1;
    padding: 4px 8px;

    // Use absolute positioning so the enter/leave doesn't jigger the animation
    position:absolute;
    left: 0; right: 0; bottom: 100%;
    transition: opacity $track-trans-time ease-in-out;

    &.ng-enter {
        display: block !important;
        opacity: 0;
        &-active {
            opacity: 1;
        }
    }
    &.ng-leave {
        display: block !important;
        &-active {
            opacity: 0;
        }
    }
}

// The currently-playing container
#currentTracks {
    background-color: #ddd;
    bottom:0;
    position:fixed;
    right:16px;
    width: 196px;
    z-index: 20;

    .track-container-title {
        text-align: right;
    }
}

// The queued-channel container
#queuedTracks {
    bottom:0;
    left:16px;
    position:fixed;
    width: 196px;
    z-index: 19;

    .track-container-title {
        text-align: left;
    }
}
